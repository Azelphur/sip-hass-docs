"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[6825],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6658:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:1,title:"Introduction"},c=void 0,u={unversionedId:"add-on/introduction",id:"add-on/introduction",title:"Introduction",description:"The Asterisk Add-on is a PBX server. It is made to use with the card, comes preconfigured, and can generate PJSIP extensions for every person entity in Home Assistant.",source:"@site/docs/add-on/introduction.md",sourceDirName:"add-on",slug:"/add-on/introduction",permalink:"/sip-hass-docs/docs/add-on/introduction",editUrl:"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/add-on/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction"},sidebar:"addonSidebar",next:{title:"Settings",permalink:"/sip-hass-docs/docs/add-on/settings"}},l={},p=[{value:"Goal",id:"goal",level:2},{value:"Features",id:"features",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Asterisk Add-on")," is a PBX server. It is made to use with the card, comes preconfigured, and can generate ",(0,i.kt)("strong",{parentName:"p"},"PJSIP extensions")," for every person entity in ",(0,i.kt)("strong",{parentName:"p"},"Home Assistant"),"."),(0,i.kt)("h2",{id:"goal"},"Goal"),(0,i.kt)("p",null,"The goal of the add-on is to make it possible to setup with the card, as easy and fast as possible."),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Comes preconfigured"),(0,i.kt)("li",{parentName:"ul"},"Lightweight PBX"),(0,i.kt)("li",{parentName:"ul"},"Preconfigured for the card"),(0,i.kt)("li",{parentName:"ul"},"Websocket setup"),(0,i.kt)("li",{parentName:"ul"},"Autogenerate WSS extensions"),(0,i.kt)("li",{parentName:"ul"},"Mailbox integration"),(0,i.kt)("li",{parentName:"ul"},"AMI configured for Asterisk integration"),(0,i.kt)("li",{parentName:"ul"},"Googletts preinstalled"),(0,i.kt)("li",{parentName:"ul"},"Speech-recognition preinstalled"),(0,i.kt)("li",{parentName:"ul"},"Use your own certificate"),(0,i.kt)("li",{parentName:"ul"},"Generate self-signed certificate"),(0,i.kt)("li",{parentName:"ul"},"(Almost) fully configurable")))}f.isMDXComponent=!0}}]);