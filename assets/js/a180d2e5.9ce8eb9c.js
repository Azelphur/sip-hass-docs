"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[4135],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return v}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),v=o,m=u["".concat(c,".").concat(v)]||u[v]||d[v]||r;return n?i.createElement(m,a(a({ref:t},s),{},{components:n})):i.createElement(m,a({ref:t},s))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<r;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7922:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var i=n(7462),o=n(3366),r=(n(7294),n(3905)),a=["components"],l={sidebar_position:2,title:"Originate Service",tags:["Originate Service"]},c=void 0,p={unversionedId:"integration/services/originate",id:"integration/services/originate",title:"Originate Service",description:"The originate service allows you to create calls to a specified SIP extension.",source:"@site/docs/integration/services/originate.md",sourceDirName:"integration/services",slug:"/integration/services/originate",permalink:"/sip-hass-docs/docs/integration/services/originate",editUrl:"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/integration/services/originate.md",tags:[{label:"Originate Service",permalink:"/sip-hass-docs/docs/tags/originate-service"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Originate Service",tags:["Originate Service"]},sidebar:"integrationSidebar",previous:{title:"Hangup Service",permalink:"/sip-hass-docs/docs/integration/services/hangup"}},s={},d=[{value:"Settings",id:"settings",level:2},{value:"Option: <code>channel</code>",id:"option-channel",level:3},{value:"Option: <code>extension</code>",id:"option-extension",level:3},{value:"Option: <code>context</code>",id:"option-context",level:3},{value:"Option <code>priority</code>",id:"option-priority",level:3},{value:"Option <code>timeout</code>",id:"option-timeout",level:3},{value:"Option <code>application</code>",id:"option-application",level:3},{value:"Option <code>data</code>",id:"option-data",level:3},{value:"Option <code>caller_id</code>",id:"option-caller_id",level:3},{value:"Option <code>early_media</code>",id:"option-early_media",level:3},{value:"Option <code>account</code>",id:"option-account",level:3},{value:"Option <code>variables</code>",id:"option-variables",level:3}],u={toc:d};function v(e){var t=e.components,n=(0,o.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The originate service allows you to create calls to a specified ",(0,r.kt)("strong",{parentName:"p"},"SIP")," extension."),(0,r.kt)("p",null,"You can set the dialplan extension, application, variables and more."),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Configuration Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Service options"',title:'"Service','options"':!0},"service: asterisk.originate\ndata:\n  channel: PJSIP/100        # device to call\n  context: default          # Context in the dialplan\n  exten: '101'              # Extension in the context\n  priority: '1'             # Priority\n  caller_id: Home Assistant # CallerID of the call\n  timeout: 60               # Time until giving up\n"))),(0,r.kt)("h3",{id:"option-channel"},"Option: ",(0,r.kt)("inlineCode",{parentName:"h3"},"channel")),(0,r.kt)("p",null,"Channel name to call."),(0,r.kt)("h3",{id:"option-extension"},"Option: ",(0,r.kt)("inlineCode",{parentName:"h3"},"extension")),(0,r.kt)("p",null,"Extension to use (requires Context and Priority)"),(0,r.kt)("h3",{id:"option-context"},"Option: ",(0,r.kt)("inlineCode",{parentName:"h3"},"context")),(0,r.kt)("p",null,"Context to use (requires Extension and Priority)"),(0,r.kt)("h3",{id:"option-priority"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"priority")),(0,r.kt)("p",null,"Priority to use (requires Extension and Context)"),(0,r.kt)("h3",{id:"option-timeout"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"timeout")),(0,r.kt)("p",null,"How long to wait for call to be answered (in seconds)"),(0,r.kt)("h3",{id:"option-application"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"application")),(0,r.kt)("p",null,"Application to execute"),(0,r.kt)("h3",{id:"option-data"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"data")),(0,r.kt)("p",null,"Data to use (requires Application)"),(0,r.kt)("h3",{id:"option-caller_id"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"caller_id")),(0,r.kt)("p",null,"CallerID to be set on the outgoing channel"),(0,r.kt)("h3",{id:"option-early_media"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"early_media")),(0,r.kt)("p",null,"Set to true to force call bridge on early media"),(0,r.kt)("h3",{id:"option-account"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"account")),(0,r.kt)("p",null,"Account code"),(0,r.kt)("h3",{id:"option-variables"},"Option ",(0,r.kt)("inlineCode",{parentName:"h3"},"variables")),(0,r.kt)("p",null,"Channel variables"))}v.isMDXComponent=!0}}]);